name: CMake

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-20.04, macos-12]
        include:
          - os: windows-2022
            triplet: x64-windows
          - os: ubuntu-20.04
            triplet: x64-linux
          - os: macos-12
            triplet: x64-osx
    steps:
    - uses: actions/checkout@v3.5.2
      with:
        submodules: 'recursive'
    - name: Initialize submodules
      run: |
        git submodule init
        git submodule update
    - name: Get cmake
      uses: lukka/get-cmake@latest
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v11.1
      with:
        vcpkgGitCommitId: 662dbb50e63af15baa2909b7eac5b1b87e86a0aa
        vcpkgDirectory: '${{github.workspace}}/vcpkg'
    - name: Run cmake(Build Release)
      uses: lukka/run-cmake@v10.5
      with:
        cmakeListsTxtPath: '${{github.workspace}}/CMakeLists.txt'
        configurePreset: 'ninja-multi-vcpkg'
        buildPreset: 'ninja-multi-vcpkg'
        buildPresetAdditionalArgs: '[`--config Release`]'
    - name: Copy tokenizers to build folder (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir ${{github.workspace}}\build\ninja-multi-vcpkg\Release\tokenizers
        move ${{github.workspace}}\build\ninja-multi-vcpkg\tokenizers\* ${{github.workspace}}\build\ninja-multi-vcpkg\Release\tokenizers\
    - name: Copy tokenizers to build folder (Linux or macOS)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        mkdir ${{github.workspace}}/build/ninja-multi-vcpkg/Release/tokenizers
        mv ${{github.workspace}}/build/ninja-multi-vcpkg/tokenizers/* ${{github.workspace}}/build/ninja-multi-vcpkg/Release/tokenizers/
    - name: Upload build artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: ChatGPT_CLI_Bot_${{matrix.os}}-${{matrix.triplet}}
        path: ${{github.workspace}}/build/ninja-multi-vcpkg/Release/*
